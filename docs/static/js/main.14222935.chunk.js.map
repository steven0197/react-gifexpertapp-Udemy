{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","image","GifExpertApp","index","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEfC,mBAAS,IAFM,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OACE,8BAEE,sBAAMC,SAdW,SAACC,GAEpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAS,MAQT,SAEE,uBACIO,KAAK,OACLC,MAAST,EACTU,SAxBgB,SAACP,GAEzBF,EAASE,EAAEQ,OAAOF,e,+BCTTG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEkCC,UAAUH,GAF5C,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIAA,EAAKC,OAJL,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAVlB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGtC,OACE,sBAAKc,UAAY,yCAAjB,UACE,4BAAIJ,IACJ,qBAAKK,IAAOf,EAAKgB,IAAON,QCHjBO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAqB1C,OAdAC,qBAAW,WAETxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEnBH,EAAS,CACPf,KAAMkB,EACNL,SAAQ,SAIb,CAACpB,IAIGqB,EDjB2BK,CAAa1B,GAAlC2B,EAFwB,EAE9BpB,KAAgBa,EAFc,EAEdA,QAGvB,OACE,qCACA,6BAAKpB,IAEJoB,GAAW,wCAGZ,qBAAKJ,UAAU,YAAf,SAIMW,EAASlB,KAAI,SAACmB,GACZ,OAAO,cAAC,EAAD,eAEHA,GADGA,EAAMjB,aEnBZkB,EAAe,WAAM,MAGG3C,mBAAS,IAHZ,mBAG1BQ,EAH0B,KAGdT,EAHc,KAWhC,OACE,gCAEE,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAED,6BAEIS,EAAWe,KAAI,SAACT,EAAU8B,GACzB,OAAO,cAAE,EAAF,CAEP9B,SAAUA,GADHA,Y,MCrBjB+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.14222935.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setValue] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    // console.log(e.target.value)\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(categories => [inputValue, ...categories])\r\n      setValue('')\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n      \r\n        <input \r\n            type='text'\r\n            value = {inputValue}\r\n            onChange={handleInputChange}\r\n        />\r\n\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n  \r\n  }\r\n","export const getGifs = async (category) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=V10HZwzt1xGTQNDkwkAMbl8YIcX4DXmE`;\r\n  const resp = await fetch(url);\r\n  const {data} = await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url:  img.images?.downsized_medium.url,\r\n    }\r\n  })\r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n  \r\n  return (\r\n    <div className = \"card animate__animated animate__fadeIn\">\r\n      <p>{title}</p>\r\n      <img src = {url} alt = {title} />\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {  \r\n  \r\n  const {data: imagenes, loading} = useFetchGifs(category);\r\n\r\n  \r\n  return (\r\n    <>\r\n    <h3>{category}</h3>\r\n\r\n    {loading && <p>Loading</p>}\r\n\r\n    \r\n    <div className=\"card-grid\">\r\n      \r\n      \r\n        {\r\n          imagenes.map((image) => {\r\n            return <GifGridItem\r\n            key = {image.id}\r\n            {...image}/> //esto manda cada propiedad como independiente\r\n\r\n          })\r\n        }\r\n     \r\n     \r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n\r\n    getGifs(category).then(imgs => {\r\n      \r\n        setState({\r\n          data: imgs,\r\n          loading:false\r\n        });\r\n     \r\n    })    \r\n  }, [category] ) //Este arreglo  indica que solo quiero que se haga el getGifs cuando el componente se renderice por primera vez\r\n\r\n  \r\n\r\n  return state; // {data: [] , loading: true}\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n // const categories = ['One Punch' , 'Samurai X', 'Dragon Ball'];\r\n const [categories, setCategories] = useState([])\r\n\r\n//  const handleAdd = () => {\r\n//    const serie = 'HunterXHunter';\r\n//    setCategories(categories => [...categories, serie]) // Call back del estado anterior\r\n\r\n//  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <h2>GifExpertApp</h2>\r\n      {/* <button onClick= {handleRestart}>Restart</button> */}\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr/>   \r\n\r\n     <ol>\r\n       {\r\n         categories.map((category, index) => {\r\n          return < GifGrid \r\n          key = {category}\r\n          category={category} /> //El key es mejor que no sea el index\r\n         })\r\n       }\r\n     </ol>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}